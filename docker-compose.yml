services:
  app:
    image: ghcr.io/wrprafra/newsletter-project:latest
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
      - DATA_DIR=/app/data
      - CREDENTIALS_PATH=/app/data/user_credentials.json
      - SETTINGS_PATH=/app/data/user_settings.json
      - CLIENT_SECRETS_FILE=/app/data/credentials.json
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - /var/newsletter:/app/data
    command:
      - uvicorn
      - backend.main:app
      - --host=0.0.0.0
      - --port=8000
      - --log-level=debug
      - --access-log
      - --proxy-headers
      - --forwarded-allow-ips=*

  worker:
    image: ghcr.io/wrprafra/newsletter-project:latest
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_started
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
      - DATA_DIR=/app/data
      - CREDENTIALS_PATH=/app/data/user_credentials.json
      - SETTINGS_PATH=/app/data/user_settings.json
    volumes:
      - /var/newsletter:/app/data
    command: python -m backend.worker

  ingestor:
    image: ghcr.io/wrprafra/newsletter-project:latest
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_started
    env_file:
      - .env
    environment:
      - INGESTOR_BACKFILL_PAGES=25
      - INGESTOR_BACKFILL_TARGET=1000
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
      - DATA_DIR=/app/data
      - CREDENTIALS_PATH=/app/data/user_credentials.json
      - SETTINGS_PATH=/app/data/user_settings.json
    volumes:
      - /var/newsletter:/app/data
    command: python -m backend.ingestor

  redis:
    image: redis:7-alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - redis_data:/data

volumes:
  redis_data:
    driver: local
